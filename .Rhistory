rmarkdown::render_site()
"---\nPosts\n---"
"---\nPosts\n---" %>% cat
cat("---\nPosts\n---")
list.files(path = "./posts/")
posts <- list.files(path = "./posts/")
require(tgsify)
i <- 1
readLines(con = "./posts/" %|% posts[i], n = 2)
readLines(con = "./posts/" %|% posts[i], n = 2)[2]
readLines(con = "./posts/" %|% posts[i], n = 2) %>%
ve(2) %>%
gsub("title: ", "", .)
posts <- list.files(path = "./posts/", pattern = ".\\.Rmd")
posts
titles <- dates <- rep(NA, length(posts))
i
titles[i] <- readLines(con = "./posts/" %|% posts[i], n = 2) %>%
ve(2) %>%
gsub("title: ", "", .)
titles
dates[i] <- posts[i] %>% substr(1,10)
dates
dates
for(i in 1:length(posts)){
titles[i] <- readLines(con = "./posts/" %|% posts[i], n = 2) %>%
ve(2) %>%
gsub("title: ", "", .)
dates[i] <- posts[i] %>% substr(1,10)
}
dates
posts
titles
"[" %|% titles %|% "]"
locs <- gsub("\\.Rmd$",".html", posts)
locs
"[" %|% titles %|% "](" %|% locs %|% ")"
"- [" %|% titles %|% "](" %|% locs %|% ")"
head <- "---\ntitle: Posts\n---"
body <- "- [" %|% titles %|% "](" %|% locs %|% ")"
head
body
cat(head, body, file = "")
head <- "---\ntitle: Posts\n---\n\n"
body <- "- [" %|% titles %|% "](" %|% locs %|% ")\n"
cat(head, body, file = "")
make_index()
make_index <- function(){
posts <- list.files(path = "./posts/", pattern = ".\\.Rmd")
locs <- gsub("\\.Rmd$",".html", posts)
titles <- dates <- rep(NA, length(posts))
for(i in 1:length(posts)){
titles[i] <- readLines(con = "./posts/" %|% posts[i], n = 2) %>%
ve(2) %>%
gsub("title: ", "", .)
dates[i] <- posts[i] %>% substr(1,10)
}
head <- "---\ntitle: Posts\n---\n\n"
body <- "- [" %|% titles %|% "](" %|% locs %|% ")\n"
cat(head, body, file = "index.Rmd")
}
make_index()
make_index <- function(){
posts <- list.files(path = "./posts/", pattern = ".\\.Rmd")
locs <- gsub("\\.Rmd$",".html", posts)
titles <- dates <- rep(NA, length(posts))
for(i in 1:length(posts)){
titles[i] <- readLines(con = "./posts/" %|% posts[i], n = 2) %>%
ve(2) %>%
gsub("title: ", "", .)
dates[i] <- posts[i] %>% substr(1,10)
}
head <- "---\ntitle: Posts\n---\n\n"
body <- "- [" %|% titles %|% "](" %|% locs %|% ")\n"
cat(head, body, sep = "", file = "index.Rmd")
}
make_index()
rmarkdown::render_site()
?rmarkdown::render_site
require(tgsify)
make_index <- function(){
posts <- list.files(path = "./posts/", pattern = ".\\.Rmd")
locs <- gsub("\\.Rmd$",".html", posts)
titles <- dates <- rep(NA, length(posts))
for(i in 1:length(posts)){
titles[i] <- readLines(con = "./posts/" %|% posts[i], n = 2) %>%
ve(2) %>%
gsub("title: ", "", .)
dates[i] <- posts[i] %>% substr(1,10)
}
head <- "---\ntitle: Posts\n---\n\n"
body <- "- [" %|% titles %|% "](" %|% locs %|% ")\n"
cat(head, body, sep = "", file = "index.Rmd")
}
make_index()
rmarkdown::render_site()
rmarkdown::render_site("./posts/")
rmarkdown::render_site("./posts/")
body
make_index <- function(){
posts <- list.files(path = "./posts/", pattern = ".\\.Rmd")
locs <- gsub("\\.Rmd$",".html", posts)
titles <- dates <- rep(NA, length(posts))
for(i in 1:length(posts)){
titles[i] <- readLines(con = "./posts/" %|% posts[i], n = 2) %>%
ve(2) %>%
gsub("title: ", "", .)
dates[i] <- posts[i] %>% substr(1,10)
}
head <- "---\ntitle: Posts\n---\n\n"
body <- "- [" %|% titles %|% "](./posts/_site/" %|% locs %|% ")\n"
cat(head, body, sep = "", file = "index.Rmd")
}
make_index()
rmarkdown::render_site()
rmarkdown::render_site("./posts/")
getwd()
rmarkdown::render_site("./posts/")
rmarkdown::render_site("./posts/")
rmarkdown::render_site("./posts/")
rmarkdown::render_site("./posts/")
rmarkdown::render_site("./posts/")
a <- pi
b <- (1 + sqrt(5))/2 #phi
theta <- exp(1)
a <- pi
b <- (1 + sqrt(5))/2 #phi
theta <- exp(1)
a <- pi
b <- (1 + sqrt(5))/2 #phi
mu <- rnorm(1, theta, sqrt(a))
mu
set.seed(2345)
theta <- exp(1)
a <- pi
b <- (1 + sqrt(5))/2 #phi
mu <- rnorm(1, theta, sqrt(a))
mu
z <- rnorm(1, mu, sqrt(b))
z
mean <- a*b/(a+b)*(theta/a + z/b)
sigma2 <- a*b/(a+b)
plotstyle(style = upright)
curve(dnorm(x, mean, sqrt(sigma2)), from = -3, to = 3)
curve(dnorm(x, mean, sqrt(sigma2)), from = mean - 3, to = mean + 3)
sqrt(simga2)*(mean - 3)
sqrt(sigma2)*(mean - 3)
sigma <- a*b/(a+b) %>% sqrt
sigma
plotstyle(style = upright)
curve(dnorm(x, mean, sigma), from = mean - 3*sigma, to = mean + 3*sigma)
dnorm(x, mean, sigma) %>%
curve(from = mean - 3*sigma, to = mean + 3*sigma)
curve(
dnorm(x, mean, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
)
curve(
dnorm(x, mean, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
, ylab = ""
, xlab = "X"
)
abline(v = mean)
ablien(v = z)
abline(v = z)
abline(v = z)
plotstyle(style = upright)
par(mar = c(2,2,2,1))
curve(
dnorm(x, mean, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
, ylab = ""
, xlab = "X"
)
abline(v = z)
axis(3, at = z, label = "Z")
axis(3, at = z, label = "z")
curve(
dnorm(x, mean, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
, ylab = ""
, xlab = "X"
)
abline(v = z)
axis(3, at = z, label = "z")
abline(v = c(z, theta))
axis(3, at = c(z, theta), label = c("z", "θ"))
axis(3, at = c(z, theta), label = c("obs. z", "θ"))
curve(
dnorm(x, mean, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
, ylab = ""
, xlab = "X"
)
abline(v = c(z, theta))
axis(3, at = c(z, theta), label = c("obs. z", "θ"))
abline(v = mean, col = "red", lty = 2)
curve(
dnorm(x, mean, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
, ylab = ""
, xlab = "X"
, lwd = 4
)
abline(v = c(z, theta))
axis(3, at = c(z, theta), label = c("obs. z", "θ"))
abline(v = mean, col = "red", lty = 2)
curve(
dnorm(x, mean, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
, ylab = ""
, xlab = "X"
, lwd = 3
)
abline(v = c(z, theta))
abline(v = c(z, theta), lwd = 2, col = "darkblue")
axis(3, at = c(z, theta), label = c("obs. z", "θ"))
abline(v = mean, col = "red", lty = 2)
axis(3, at = c(z, theta), label = c("obs. z", "θ"), las = 1)
axis(3, at = c(z, theta), label = c("obs. z", "θ"), las = 0)
axis(3, at = c(z, theta), label = c("z", "θ"))
curve(
dnorm(x, mean, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
, ylab = ""
, xlab = "X"
, lwd = 3
)
abline(v = c(z, theta), lwd = 2, col = "darkblue")
axis(3, at = c(z, theta), label = c("z", "θ"))
abline(v = mean, col = "red", lty = 2)
axis(3, at = mean, label = "E(μ|z)", line = 2)
axis(3, at = mean, label = "E(μ|z)", line = 1)
edit(plotstyle)
curve(
dnorm(x, mean, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
, ylab = ""
, xlab = "X"
, lwd = 3
)
abline(v = c(z, theta), lwd = 2, col = "darkblue")
axis(3, at = c(z, theta), label = c("z", "θ"))
abline(v = mean, col = "red", lty = 2)
axis(3, at = mean, label = "E(μ|z)", line = 1, tcl = 0)
curve(
dnorm(x, mean, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
, ylab = ""
, xlab = ""
, lwd = 3
)
abline(v = c(z, theta), lwd = 2, col = "darkblue")
axis(3, at = c(z, theta), label = c("z", "θ"))
abline(v = mean, col = "red", lty = 2)
axis(3, at = mean, label = "E(μ|z)", line = 1, tcl = 0)
mean <- a*b/(a+b)*(0/a + z/b)
sigma <- a*b/(a+b) %>% sqrt
plotstyle(style = upright)
par(mar = c(2,2,2,1))
curve(
dnorm(x, mean, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
, ylab = ""
, xlab = ""
, lwd = 3
)
abline(v = c(z, theta), lwd = 2, col = "darkblue")
axis(3, at = c(z, theta), label = c("z", "θ"))
abline(v = mean, col = "red", lty = 2)
axis(3, at = mean, label = "E(μ|z)", line = 1, tcl = 0)
mean2 <- a*b/(a+b)*(0/a + z/b)
plotstyle(style = upright)
par(mar = c(2,2,2,1))
curve(
dnorm(x, mean2, sigma)
, from = mean - 3*sigma
, to = mean + 3*sigma
, ylab = ""
, xlab = ""
, lwd = 3
)
abline(v = c(z, theta), lwd = 2, col = "darkblue")
axis(3, at = c(z, theta), label = c("z", "θ"))
abline(v = mean2, col = "red", lty = 2)
axis(3, at = mean, label = "E(μ|z, θ = 0)", line = 1, tcl = 0)
source('~/Learning/large-scale-inference/make-site.R', echo=TRUE)
getwd()
posts <- list.files(pattern = "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*\\.Rmd")
posts
require(tgsify)
make_index <- function(){
posts <- list.files(pattern = "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*\\.Rmd")
locs <- gsub("\\.Rmd$",".html", posts)
titles <- dates <- rep(NA, length(posts))
for(i in 1:length(posts)){
titles[i] <- readLines(con = "./" %|% posts[i], n = 2) %>%
ve(2) %>%
gsub("title: ", "", .)
dates[i] <- posts[i] %>% substr(1,10)
}
head <- "---\ntitle: Posts\n---\n\n"
body <- "- [" %|% titles %|% "](" %|% locs %|% ")\n"
cat(head, body, sep = "", file = "index.Rmd")
}
make_index()
rmarkdown::render_site()
source('~/Learning/large-scale-inference/make-site.R', echo=TRUE)
